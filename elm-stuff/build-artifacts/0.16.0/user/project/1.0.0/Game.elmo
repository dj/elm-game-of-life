Elm.Game = Elm.Game || {};
Elm.Game.make = function (_elm) {
   "use strict";
   _elm.Game = _elm.Game || {};
   if (_elm.Game.values) return _elm.Game.values;
   var _U = Elm.Native.Utils.make(_elm),
   $Basics = Elm.Basics.make(_elm),
   $Debug = Elm.Debug.make(_elm),
   $Html = Elm.Html.make(_elm),
   $Html$Events = Elm.Html.Events.make(_elm),
   $List = Elm.List.make(_elm),
   $Maybe = Elm.Maybe.make(_elm),
   $Result = Elm.Result.make(_elm),
   $Signal = Elm.Signal.make(_elm),
   $StartApp$Simple = Elm.StartApp.Simple.make(_elm),
   $Svg = Elm.Svg.make(_elm),
   $Svg$Attributes = Elm.Svg.Attributes.make(_elm);
   var _op = {};
   var cellSize = 50;
   var drawCell = function (cell) {
      return A2($Svg.rect,
      _U.list([$Svg$Attributes.x($Basics.toString(cell.x * cellSize))
              ,$Svg$Attributes.y($Basics.toString(cell.y * cellSize))
              ,$Svg$Attributes.width($Basics.toString(cellSize))
              ,$Svg$Attributes.height($Basics.toString(cellSize))
              ,$Svg$Attributes.style("fill: #efefef")]),
      _U.list([]));
   };
   var drawBoard = F2(function (size,living) {
      return A2($Svg.svg,
      _U.list([$Svg$Attributes.width($Basics.toString(cellSize * size))
              ,$Svg$Attributes.height($Basics.toString(cellSize * size))
              ,$Svg$Attributes.style("background-color: #222")]),
      A2($List.map,drawCell,living));
   });
   var update = F2(function (action,model) {
      var _p0 = action;
      if (_p0.ctor === "NoOp") {
            return model;
         } else {
            return _U.update(model,{step: model.step + 1});
         }
   });
   var Step = {ctor: "Step"};
   var view = F2(function (address,model) {
      return A2($Html.div,
      _U.list([]),
      _U.list([$Html.text("Game of Life")
              ,A2($Html.div,_U.list([]),_U.list([A2(drawBoard,model.size,model.living)]))
              ,A2($Html.div,_U.list([]),_U.list([$Html.text($Basics.toString(model.step))]))
              ,A2($Html.div,_U.list([]),_U.list([A2($Html.button,_U.list([A2($Html$Events.onClick,address,Step)]),_U.list([$Html.text("Step")]))]))]));
   });
   var main = $StartApp$Simple.start({view: view,update: update,model: {step: 0,size: 4,living: _U.list([{x: 0,y: 0},{x: 1,y: 1},{x: 2,y: 2},{x: 3,y: 3}])}});
   var NoOp = {ctor: "NoOp"};
   var Model = F3(function (a,b,c) {    return {step: a,size: b,living: c};});
   var Cell = F2(function (a,b) {    return {x: a,y: b};});
   return _elm.Game.values = {_op: _op
                             ,Cell: Cell
                             ,Model: Model
                             ,NoOp: NoOp
                             ,Step: Step
                             ,update: update
                             ,cellSize: cellSize
                             ,drawCell: drawCell
                             ,drawBoard: drawBoard
                             ,view: view
                             ,main: main};
};